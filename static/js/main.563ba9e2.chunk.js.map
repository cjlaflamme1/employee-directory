{"version":3,"sources":["components/Navbar/Navbar.js","utils/API/API.js","components/table/tableRow.js","components/table/Table.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","axios","get","TableRow","props","employee","map","src","profilePhoto","alt","firstName","lastName","email","phone","TableComponent","state","input","employees","filteredEmployees","sortFactory","event","modifier","target","id","length","newList","sort","curr","prev","setState","handleInputChange","newSearch","value","searchFilter","searchString","newEmployeeArray","this","filter","includes","API","then","results","data","newEmployees","forEach","name","first","last","picture","medium","push","catch","err","console","log","class","type","placeholder","onChange","onClick","deliverEmployees","React","Component","App","Table","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.563ba9e2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navbar.css';\r\n\r\nfunction Navbar() {\r\n    return (\r\n\r\n        <div className=\"jumbotron mb-2\">\r\n            <h1 className=\"display-4 text-center\">Employee Directory</h1>\r\n\r\n            <hr className=\"my-4\" />\r\n            <p className=\"text-center\">Enter the first name of the employee you seek below, and sort by their last name.</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import axios from 'axios';\r\n\r\nexport default {\r\n    getRandomEmployees: function () {\r\n        \r\n        return axios.get(\"https://randomuser.me/api/?results=50&nat=us\")\r\n    }\r\n}","import React from 'react';\r\n\r\nfunction TableRow(props) {\r\n    return (\r\n        <>\r\n            \r\n            {props.employee.map((employee) => {\r\n                return (\r\n                    <tr>\r\n                        <td>\r\n                            {/* Add actual path for image */}\r\n                            <img src={employee.profilePhoto} alt=\"Employee Headshot\" className=\"profilePhoto\"/>\r\n                        </td>\r\n                        <td>\r\n                            {employee.firstName}\r\n                        </td>\r\n                        <td>\r\n                            {employee.lastName}\r\n                        </td>\r\n                        <td>\r\n                            {employee.email}\r\n                        </td>\r\n                        <td>\r\n                            {employee.phone}\r\n                        </td>\r\n                    </tr>\r\n\r\n                )\r\n\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TableRow;","import React from 'react';\r\nimport API from '../../utils/API/API';\r\nimport TableRow from './tableRow';\r\nimport \"./table.css\";\r\n\r\nclass TableComponent extends React.Component {\r\n    state = {\r\n        input: \"\",\r\n        employees: [],\r\n        filteredEmployees: []\r\n    };\r\n\r\n    // sort function created, need to hook to list.\r\n    sortFactory = (event) => {\r\n        const dataSort = event.target.id;\r\n        let modifier = (dataSort === \"true\") ? 1 : -1;\r\n\r\n        if (this.state.filteredEmployees.length > 0) {\r\n            const newList = this.state.filteredEmployees.sort((curr, prev) => {\r\n                return (curr.lastName > prev.lastName ? 1 : -1) * modifier;\r\n            })\r\n            this.setState({ filteredEmployees: newList });\r\n\r\n        } else {\r\n            const newList = this.state.employees.sort((curr, prev) => {\r\n                return (curr.lastName > prev.lastName ? 1 : -1) * modifier;\r\n            })\r\n            this.setState({ employees: newList });\r\n        }\r\n    }\r\n\r\n    searchFilter(searchString) {\r\n        \r\n        let newEmployeeArray = this.state.employees.filter((employee) => {\r\n            if (employee.firstName.includes(searchString)) {\r\n                return employee;\r\n            } else {\r\n                return;\r\n            };\r\n        })\r\n        this.setState({ filteredEmployees: newEmployeeArray });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.employees.length <= 0) {\r\n            API.getRandomEmployees().then(({ data: { results } }) => {\r\n                const newEmployees = [];\r\n                \r\n                results.forEach(({ name: { first: firstName, last: lastName }, email, phone, picture: { medium: profilePhoto } }) => {\r\n                    newEmployees.push({ firstName, lastName, email, phone, profilePhoto });\r\n                })\r\n                this.setState({ employees: newEmployees });\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const newSearch = event.target.value;\r\n        \r\n        this.setState({ input: newSearch });\r\n        if (!newSearch) {\r\n            this.setState({ filteredEmployees: [] });\r\n            this.setState({ input: \"\" });\r\n        } else {\r\n            this.searchFilter(newSearch);\r\n\r\n        }\r\n        \r\n    };\r\n\r\n    deliverEmployees() {\r\n        if ((this.state.filteredEmployees.length === 0) && (this.state.input.length > 0)) {\r\n            return [{\r\n                profilePhoto: \"https://cdn.pixabay.com/photo/2015/11/03/08/56/question-mark-1019820_960_720.jpg\",\r\n                firstName: \"Employee\",\r\n                lastName: \"Not Found\",\r\n                email: \"\",\r\n                phone: \"\"\r\n            }]\r\n        } else if (this.state.filteredEmployees.length > 0) {\r\n            return this.state.filteredEmployees;\r\n        } else {\r\n            return this.state.employees\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"input-group flex-nowrap justify-content-center mb-2\">\r\n                    <div class=\"input-group-prepend\">\r\n                        <span class=\"input-group-text\" id=\"addon-wrapping\">Search</span>\r\n                    </div>\r\n                    \r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"input\"\r\n                        placeholder=\"First Name\"\r\n                        onChange={this.handleInputChange}\r\n                    />\r\n                </div>\r\n                <table className=\"table table-dark table-striped table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>\r\n                                Employee Photo\r\n                            </th>\r\n                            <th>\r\n                                First Name\r\n                            </th>\r\n                            <th>\r\n                                <a id=\"true\" onClick={this.sortFactory}><i class=\"fas fa-sort-alpha-down\" id=\"true\"></i></a> Last Name  <a onClick={this.sortFactory} id=\"false\"><i class=\"fas fa-sort-alpha-up-alt\" id=\"false\"></i></a>\r\n\r\n                            </th>\r\n                            <th>\r\n                                Email Address\r\n                            </th>\r\n                            <th>\r\n                                Phone Number\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <TableRow employee={this.deliverEmployees()} />\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableComponent;","import Navbar from './components/Navbar/Navbar';\nimport TableComponent from './components/table/Table';\n\nfunction App() {\n  return (\n    <div>\n    <Navbar />\n    <div className=\"container\">\n      \n      <TableComponent />\n    </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}